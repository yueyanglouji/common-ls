defaultTasks 'clean', 'deploy'

//apply plugin:'java'
apply plugin: 'groovy'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

println properties["systemProp.http.proxyHost"]
def baseName = properties["project.name"]
if(baseName == null || baseName.trim().equals("")){
	baseName = project.name.split("[^a-zA-Z0-9]")[0]
}
println baseName

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

sourceSets {
	main {
		java{
			srcDirs = []
		}
        groovy {
            //srcDir 'src/main/java'
			srcDirs = ['src/main/java']
        }
        resources {
            srcDir 'src/main/resources'
        }
    }    
}

configurations {
    runtime {
        extendsFrom implementation
    }

	all*.exclude module: 'jcl104-over-slf4j'
	
	removeOnBuildEclipse
}

buildscript {
	repositories {
		maven{
			url "https://repo.yokogawa.work/repository/maven-yokogawa-release/"
		}
	}
}
repositories {
	maven{
		url "https://repo.yokogawa.work/repository/maven-yokogawa-release/"
	}
}

dependencies {
	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0'
	implementation 'org.springframework:spring-context:5.3.18'

	implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.18'

	implementation 'org.json:json:+'
	implementation 'org.noggit:noggit:+'

	implementation 'commons-dbcp:commons-dbcp:+'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.2.0'
	implementation 'org.xerial:sqlite-jdbc:+'
	implementation group: 'org.mybatis', name: 'mybatis-spring', version: '+'
	implementation group: 'org.mybatis', name: 'mybatis-typehandlers-jsr310', version: '+'

	implementation 'org.mybatis:mybatis:+'
	implementation 'org.springframework:spring-jdbc:5.3.18'

	implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.2.1'

	implementation 'org.jsoup:jsoup:+'

	implementation group: 'org.aspectj', name: 'aspectjrt', version: '+'
	implementation group: 'org.aspectj', name: 'aspectjweaver', version: '+'
	implementation 'javax.mail:mail:+'
	implementation 'org.apache.velocity:velocity:+'
	
	implementation group: 'org.apache.ant', name: 'ant', version: '+'
	implementation group: 'org.samba.jcifs', name: 'jcifs', version: '+'

	implementation 'org.springframework.security:spring-security-core:5.6.2'
	implementation group: 'org.apache.commons', name: 'commons-csv', version: '+'

	// ftp dependency
	implementation group: 'commons-net', name: 'commons-net', version: '3.8.0'

	implementation group: 'org.apache.poi', name: 'poi', version: '+'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '+'

	implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '+'

	implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '+'

	implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'

	implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
	implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'


	implementation group: 'org.jboss.modules', name: 'jboss-modules', version: '2.0.3.Final'
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.14'
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	implementation 'org.apache.groovy:groovy:4.0.17'

	testImplementation 'io.netty:netty-all:4.1.109.Final'
}

group 'com.woyouyigegushi.common-ls'
//version '1.0.5-SNAPSHOT'
version '1.0.5'

compileGroovy{
	options.encoding = 'UTF-8'
	classpath = configurations.runtime
}

def mainclass = properties["manifest.mainclass"];
jar{
 	manifest {
        //attributes 'Main-Class': mainclass;
        //attributes 'Class-Path': "./ " + configurations.runtime.findAll {it.getName().endsWith('.jar') }.collect { "lib/${it.getName()}" }.join(' ')
    }
    
    exclude "*.properties"
}

task copylib {
	doLast{
		def dir = file("/repos/lib")
		if(!dir.exists()){
			dir.mkdirs();
		}

		copy{
			println("copy")
			from configurations.runtime.findAll {it.getName().endsWith('.jar') }
			into dir
		}
	}
}

task llast {
	doLast{
		println new Date()
	}
}

tasks.findAll{it.name != 'llast'}.each{it.finalizedBy llast}